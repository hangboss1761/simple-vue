{"version":3,"sources":["webpack://Vue/webpack/universalModuleDefinition","webpack://Vue/webpack/bootstrap","webpack://Vue/./src/compiler/compiler.js","webpack://Vue/./src/index.js","webpack://Vue/./src/utils/regex.js","webpack://Vue/./src/utils/utils.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,O;QCVA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;;QAEA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;;;QAGA;QACA;;QAEA;QACA;;QAEA;QACA;QACA;QACA,0CAA0C,gCAAgC;QAC1E;QACA;;QAEA;QACA;QACA;QACA,wDAAwD,kBAAkB;QAC1E;QACA,iDAAiD,cAAc;QAC/D;;QAEA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA;QACA,yCAAyC,iCAAiC;QAC1E,gHAAgH,mBAAmB,EAAE;QACrI;QACA;;QAEA;QACA;QACA;QACA,2BAA2B,0BAA0B,EAAE;QACvD,iCAAiC,eAAe;QAChD;QACA;QACA;;QAEA;QACA,sDAAsD,+DAA+D;;QAErH;QACA;;;QAGA;QACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AAAA;AAA0C;AAC4B;;AAE/D;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA,SAAS,aAAa;;AAEtB;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA;AACA;AACA,WAAW,sBAAsB;AACjC,UAAU,iEAAY;AACtB;AACA,oCAAoC,8DAAS;AAC7C;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA,aAAa,KAAK;AAClB;AACA;AACA,kDAAkD,wDAAW;AAC7D,aAAa,8DAAS;AACtB,KAAK;;AAEL;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA,C;;;;;;;;;;;;ACrGA;AAAA;AAAA;AAA8C;;AAE/B;AACf;AACA;AACA;;AAEA,QAAQ,2DAAQ;AAChB;AACA,C;;;;;;;;;;;;;;;;;;ACRA;AACA,QAAQ,KAAK;AACb;AACO,uBAAuB,EAAE,OAAO,EAAE;AAClC;;AAEP;AACA;AACA;AACO;AACA;;;;;;;;;;;;;;;;;ACVP;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB;AACO,2BAA2B;AAClC;;AAEA;AACA;AACA,GAAG;AACH,C","file":"vue.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Vue\"] = factory();\n\telse\n\t\troot[\"Vue\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import { getObjVal } from '../utils/utils'\r\nimport { mustacheReg, isMustache, isVDirective } from '../utils/regex'\r\n\r\nexport class Complier {\r\n  constructor($el, vm) {\r\n    this.el = this.isElementNode($el) ? $el : document.querySelector($el);\r\n    this.vm = vm;\r\n\r\n    // 转移到内存\r\n    let fragment = this.node2Fragment(this.el);\r\n\r\n    // 编译\r\n    this.complier(fragment);\r\n\r\n    // 插入处理好的dom到目标区域\r\n    this.el.appendChild(fragment);\r\n  }\r\n\r\n  node2Fragment (el) {\r\n    let fragment = document.createDocumentFragment();\r\n    let firstChild;\r\n    while (firstChild = el.firstChild) {\r\n      fragment.appendChild(firstChild);\r\n    }\r\n\r\n    return fragment;\r\n  }\r\n\r\n  /**\r\n   * 编译node\r\n   * @param {Node} node\r\n   */\r\n  complier(node) {\r\n    let { childNodes } = node;\r\n\r\n    [...childNodes].forEach(item => {\r\n      if (this.isElementNode(item)) {\r\n        this.complierElement(item);\r\n        this.complier(item);\r\n      } else {\r\n        this.complierText(item);\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 编译元素节点\r\n   * @param {Node} node\r\n   */\r\n  complierElement (node) {\r\n    console.log('[...node.attributes] :>> ', [...node.attributes]);\r\n    [...node.attributes].forEach(attr => {\r\n      let { nodeName, nodeValue } = attr;\r\n      if (isVDirective(attr.nodeName)) {\r\n        let directive = nodeName.match(/^v-(.+)/)[1];\r\n        CompilerUtil.setModel(node, getObjVal(this.vm.$data, attr.nodeValue));\r\n        CompilerUtil[directive] && CompilerUtil[directive]();\r\n      }\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 编译文本节点\r\n   * @param {Node} node\r\n   */\r\n  complierText (node) {\r\n    let newTextContent = node.textContent.replace(mustacheReg, (...rest) => {\r\n      return getObjVal(this.vm.$data, rest[1]);\r\n    })\r\n\r\n    CompilerUtil.setText(node, newTextContent);\r\n  }\r\n\r\n  isElementNode (node) {\r\n    // ELEMENT_NODE = 1\r\n    return node.nodeType === 1;\r\n  }\r\n}\r\n\r\nconst CompilerUtil = {\r\n  model (node, vm, expr) {\r\n    // TODO: 实现双向绑定\r\n    console.log('model')\r\n  },\r\n  html () {\r\n    console.log('html')\r\n  },\r\n  text () {\r\n    console.log('text');\r\n  },\r\n  setModel (node, value) {\r\n    node.value = value;\r\n  },\r\n\r\n  setText (node, value) {\r\n    node.nodeValue = value;\r\n  },\r\n\r\n  setHtml (node, value) {\r\n    node.innerHtml = value;\r\n  }\r\n}","import { Complier } from './compiler/compiler'\r\n\r\nexport default class Vue {\r\n  constructor(options) {\r\n    this.$data = typeof options.data === 'function' ? options.data() : options.data;\r\n    this.$el = options.el;\r\n\r\n    new Complier(this.$el, this);\r\n  }\r\n}","\r\n/**\r\n * 匹配 {{ x }} 语法\r\n */\r\nexport const mustacheReg = /\\{\\{(.+?)\\}\\}/;\r\nexport const isMustache = value => mustacheReg.test(value);\r\n\r\n/**\r\n * 匹配 vue v-xx指令\r\n */\r\nexport const vdirectiveReg = /^v-/;\r\nexport const isVDirective = value => vdirectiveReg.test(value)\r\n\r\n","\r\n/**\r\n *根据路径从对象中获取值\r\n * @param {object} obj 目标对象\r\n * @param {string} expr 路径\r\n */\r\nexport const getObjVal = (obj = {}, expr) => {\r\n  let keyArr = expr.replace(/\\s/g, '').split('.');\r\n\r\n  return keyArr.reduce((acc, cur) => {\r\n    return acc[cur];\r\n  }, obj);\r\n}"],"sourceRoot":""}